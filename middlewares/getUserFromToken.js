const jwt = require("jsonwebtoken");
const constants = require("../utils/constants");
const User = require('../schemas/user');

module.exports = async function (req, res, next) {
    console.log("=== üü° ƒêANG V√ÄO MIDDLEWARE getUserFromToken ===");

    try {
        const token = req.signedCookies.token; // ‚úÖ d√πng signedCookies thay v√¨ cookies
        console.log("‚û°Ô∏è Token t·ª´ signed cookie:", token);

        if (!token) {
            console.log("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y token");
            req.user = null;
            res.locals.currentUser = null;
            return next();
        }

        const decoded = jwt.verify(token, constants.SECRET_KEY);
        console.log("‚úÖ Token decode xong:", decoded);

        req.session.userId = decoded.id;
        console.log("üìå G√°n userId v√†o session:", req.session.userId);

        const user = await User.findById(decoded.id).populate('role');
        if (!user) {
            console.log("‚ùå Kh√¥ng t√¨m th·∫•y user trong DB");
            req.user = null;
            res.locals.currentUser = null;
            return next();
        }

        req.user = user;
        res.locals.currentUser = {
            _id: user._id,
            username: user.username,
            roleId: user.role?._id?.toString() || '',
            roleName: user.role?.name || '',
        };
        console.log("üéØ Current User set v√†o res.locals:", res.locals.currentUser);

        next();
    } catch (err) {
        console.error("‚ùå L·ªói middleware getUserFromToken:", err.message);
        req.user = null;
        res.locals.currentUser = null;
        next();
    }
};
